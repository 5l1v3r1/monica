jobs:
- job: tests_cypress
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    parallel: 4
  steps:
  - template: prepare-environment-step.yml
  - template: composer-install-step.yml

  - task: CacheBeta@0
    inputs:
      key: yarn-v1 | yarn.lock
      path: $(YARN_CACHE_FOLDER)
    displayName: Cache Yarn packages
  - script: yarn inst
    displayName: 'yarn install'

  - template: prepare-db-step.yml
  - template: seed-test-db-step.yml

  - script: npm run cy:verify
    displayName: 'Cypress verify'

  - bash: |
      php -S localhost:8000 -t public scripts/tests/server-cc.php &
    displayName: 'Run http server'

  - bash: |
      npx cypress run --record --parallel --config "baseUrl=http://localhost:8000" --ci-build-id $BUILD_BUILDNUMBER --group "Azure CI" --key ${CYPRESS_RECORD_KEY}
    displayName: 'Run cypress tests'
    env:
      CYPRESS_RECORD_KEY: $(CYPRESS_RECORD_KEY)

  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    inputs:
      testResultsFormat: JUnit
      testResultsFiles: 'results*.xml'
      searchFolder: '$(System.DefaultWorkingDirectory)/results/cypress'
      mergeTestResults: true
    condition: succeededOrFailed()

  - bash: |
      vendor/bin/phpcov merge --clover=results/coveragec.xml results/coverage/
      rm -rf results/coverage
    displayName: 'Fix coverage'
    condition: succeededOrFailed()

  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'resultsc$(System.JobPositionInPhase)'
      targetPath: 'results'
    condition: succeededOrFailed()
