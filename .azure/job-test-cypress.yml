jobs:
- job: tests_cypress
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    parallel: 6
  steps:
  - template: step-prepare-environment.yml
  - bash: |
      echo "REQUIRES_SUBSCRIPTION=true" >> .env
  - template: step-composer-install.yml
  - template: step-prepare-db.yml
  - template: step-seed-test-db.yml

  - template: step-cache-yarn.yml
  - script: yarn inst
    displayName: yarn install

  - script: npm run cy:verify
    displayName: Cypress verify

  - bash: |
      #php -S localhost:8000 -t public scripts/tests/server-cc.php &
      php artisan serve &
    displayName: Run http server

  - bash: |
      source scripts/ci/fixsecrets.sh
      npx cypress run --record --parallel --config "baseUrl=http://localhost:8000" --ci-build-id $BUILD_BUILDNUMBER --group "Azure DevOps CI" --key ${CYPRESS_RECORD_KEY}
    displayName: Run cypress tests
    env:
      CYPRESS_RECORD_KEY: $(CYPRESS_RECORD_KEY)

  - task: PublishTestResults@2
    displayName: Publish Test Results
    inputs:
      testResultsFormat: JUnit
      testResultsFiles: 'results*.xml'
      searchFolder: '$(System.DefaultWorkingDirectory)/results/junit/cypress'
      mergeTestResults: true
    condition: succeededOrFailed()

#  - bash: |
#      vendor/bin/phpcov merge --clover=results/coverage-cy$(System.JobPositionInPhase).xml results/coverage/
#      rm -rf results/coverage
#    displayName: 'Fix coverage'
#    condition: succeededOrFailed()

  - publish: $(System.DefaultWorkingDirectory)/results
    artifact: results-cy$(System.JobPositionInPhase)
    condition: succeededOrFailed()
